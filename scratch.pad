everything is in a frame
frames have:
    variable stats - number, size
    methods to remove and create them
    no stack - operating on values is done with placed values at compile time
    a whole heckbunch of instructions
    variables derived from parent frames

frames belong to a function
functions have:
    numerous frames
    a marked entry frame - no they do not, use first
    arguments which sub-frames can derive variables from

functions live within a context - anaolgous to whole programs or jarfiles??
context has:
    ~~global CONSTANT variables~~ no they do not use literal replacement
    multiple functions - entrypoint is always first
    for dynamic, can assign names/paths to functions or constants
    home of all literals

variables table:  



Calling externals:
    they would be "special" global CONSTANTS referenced by string - r u sure
    resolved when the global context is loaded

need bytecode ideas
start with variable encoding
should we just use fb - yes

roight
a variable lookup starts within the dynamics
then indexes through the constants then the function args then starts descending through frames
todo: figure out how to compile-time function lookups