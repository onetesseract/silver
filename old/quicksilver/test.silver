printf(val &u8) void;
exit(code u64) void;

panic(msg &u8) void = {
  printf("\npanic!: ");
  printf(msg)
};

ExprType enum {
  Identifier;
  Number;
};

Expr {
  type ExprType;
  value &u8;
};

Identifier {
  value &u8;
};

self Identifier print() void = {
  printf(self.value)
};

self Expr print() void = {
  if self.type == ExprType::Identifier {
    print(*((self.value) as &Identifier))
  } else { panic("not impl") }
};

main(argc u64, argv &&u8) void = {
  id Identifier;
  id.value = "meep";

  ex Expr;
  ex.type = ExprType::Identifier;
  ex.value = (&id) as &u8;

  ex.print();

  ex.type = ExprType::Number;
  ex.print();
  0
};
