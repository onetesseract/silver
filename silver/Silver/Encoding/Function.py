# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Encoding

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Function(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Function()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsFunction(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Function
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Function
    def Args(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from Silver.Encoding.Variable import Variable
            obj = Variable()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Function
    def ArgsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # Function
    def ArgsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

    # Function
    def Frames(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from Silver.Encoding.Frame import Frame
            obj = Frame()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Function
    def FramesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # Function
    def FramesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

    # Function
    def PublishedName(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int8Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 1))
        return 0

    # Function
    def PublishedNameAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int8Flags, o)
        return 0

    # Function
    def PublishedNameLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # Function
    def PublishedNameIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

    # Function
    def ReturnByteWidth(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(4)
def FunctionStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddArgs(builder, args): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(args), 0)
def FunctionAddArgs(builder, args):
    """This method is deprecated. Please switch to AddArgs."""
    return AddArgs(builder, args)
def StartArgsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FunctionStartArgsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartArgsVector(builder, numElems)
def AddFrames(builder, frames): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(frames), 0)
def FunctionAddFrames(builder, frames):
    """This method is deprecated. Please switch to AddFrames."""
    return AddFrames(builder, frames)
def StartFramesVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def FunctionStartFramesVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartFramesVector(builder, numElems)
def AddPublishedName(builder, publishedName): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(publishedName), 0)
def FunctionAddPublishedName(builder, publishedName):
    """This method is deprecated. Please switch to AddPublishedName."""
    return AddPublishedName(builder, publishedName)
def StartPublishedNameVector(builder, numElems): return builder.StartVector(1, numElems, 1)
def FunctionStartPublishedNameVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartPublishedNameVector(builder, numElems)
def AddReturnByteWidth(builder, returnByteWidth): builder.PrependUint32Slot(3, returnByteWidth, 0)
def FunctionAddReturnByteWidth(builder, returnByteWidth):
    """This method is deprecated. Please switch to AddReturnByteWidth."""
    return AddReturnByteWidth(builder, returnByteWidth)
def End(builder): return builder.EndObject()
def FunctionEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)