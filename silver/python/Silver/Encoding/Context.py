# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Encoding

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Context(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Context()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsContext(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Context
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Context
    def DynamicVars(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from Silver.Encoding.Dynamic import Dynamic
            obj = Dynamic()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Context
    def DynamicVarsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # Context
    def DynamicVarsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

    # Context
    def DynamicFns(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from Silver.Encoding.Dynamic import Dynamic
            obj = Dynamic()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Context
    def DynamicFnsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # Context
    def DynamicFnsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

    # Context
    def Constants(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from Silver.Encoding.Variable import Variable
            obj = Variable()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Context
    def ConstantsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # Context
    def ConstantsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

    # Context
    def Functions(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from Silver.Encoding.Function import Function
            obj = Function()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Context
    def FunctionsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # Context
    def FunctionsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        return o == 0

def Start(builder): builder.StartObject(4)
def ContextStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddDynamicVars(builder, dynamicVars): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(dynamicVars), 0)
def ContextAddDynamicVars(builder, dynamicVars):
    """This method is deprecated. Please switch to AddDynamicVars."""
    return AddDynamicVars(builder, dynamicVars)
def StartDynamicVarsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ContextStartDynamicVarsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartDynamicVarsVector(builder, numElems)
def AddDynamicFns(builder, dynamicFns): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(dynamicFns), 0)
def ContextAddDynamicFns(builder, dynamicFns):
    """This method is deprecated. Please switch to AddDynamicFns."""
    return AddDynamicFns(builder, dynamicFns)
def StartDynamicFnsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ContextStartDynamicFnsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartDynamicFnsVector(builder, numElems)
def AddConstants(builder, constants): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(constants), 0)
def ContextAddConstants(builder, constants):
    """This method is deprecated. Please switch to AddConstants."""
    return AddConstants(builder, constants)
def StartConstantsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ContextStartConstantsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartConstantsVector(builder, numElems)
def AddFunctions(builder, functions): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(functions), 0)
def ContextAddFunctions(builder, functions):
    """This method is deprecated. Please switch to AddFunctions."""
    return AddFunctions(builder, functions)
def StartFunctionsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ContextStartFunctionsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartFunctionsVector(builder, numElems)
def End(builder): return builder.EndObject()
def ContextEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)